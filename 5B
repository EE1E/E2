#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* a function that takes in a pointer to structure variable and de-allocates memory for the matrix*/
void free_matrix(char **strmat)
{
	int i;
	for (i = 0; i < 1000; i++)
	{
		free(strmat[i]);
	}
	free(strmat);
}

void lowercase_remove_punct(char *original_string, char *processed_string)
{
	int i1, i2;
	char c;
	for (i1=0, i2=0; i1<strlen(original_string); i1++)
	{
		c = original_string[i1];
		if ((c>='A') && (c<='Z'))
			processed_string[i2++] = original_string[i1] - 'A' + 'a';
		if (((c>='a') && (c<='z')) || (c=='\''))
			processed_string[i2++] = original_string[i1];
	}
	processed_string[i2] = '\0';
}



char** read_file(char* filename)
{
	//IS THAT OK? about temp_line?
	char **strmat, temp_line[100];
	int i = 0,j, string_size, file;
	FILE* file1;

	if(strcmp(filename,"dict")==0)
	{
		/*opens the file for reading*/
		file1 = fopen("c:\\dict.txt", "r");
	}
	else
	{
		file1 = fopen("c:\\textfile.txt", "r");
	}

	//inputtxt = fopen("y:\\inputtxt.txt", "r");
	/*checks if we can open the file, otherwise output error message*/
	if (file1 == NULL)
	{
		printf("Could not open dict.txt for reading \n");
	}
	else
	{
		/*allocates the memory location to the rows or the array of pointers to the columns*/
		strmat = (char **)malloc(sizeof(char*)*1000);

		/*allocates the memory location to the rows using a for loop*/

		do
		{
			/*temp_line is now the contents of the line in the file*/
			file = fscanf(file1, "%s", temp_line);
			string_size = strlen(temp_line);
			lowercase_remove_punct(temp_line,temp_line);
			/*allocates a row equal to the size of the word in the file*/
			strmat[i] = (char *)malloc(sizeof(char)*string_size);
			/*copies the word into the marix*/
			strcpy(strmat[i],temp_line);

			i++;
		} while (file != EOF);

		/*closes the file*/
		fclose(file1);
		return strmat;
	}
}

int main(void)
{
	int i,j,found=0;
	char **dict_strmat,**input_strmat;

	dict_strmat=read_file("dict");
	input_strmat=read_file("inputtxt");

	//how to calculate size of matrix for comapring, two for loops, also is it ok to ouptput matrices like that, should I return the line number instead?


	/*print out the contents of the array from 999 to 950*/

	printf("Here are the misspelt words: \n");
	for(i = 0; i <50; i++)
	{
		for(j = 0; j <1000; j++)
		{
			if(strcmp(dict_strmat[j],input_strmat[i])==0)
				found=1;


		}
		if (found!=1)
		{
			printf("%s",input_strmat[i]);
		}
	}

	printf("\n\n\n\n\n");

	for (i = 0; i <50; i++)
	{		
		printf("%s \n", dict_strmat[i]);
	}




	free_matrix(dict_strmat);
	free_matrix(input_strmat);

	return 0;


}



